# Makefile.in generated by automake 1.9.6 from Makefile.am.
# @configure_input@

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = .
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
INSTALL = @INSTALL@
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
bin_PROGRAMS = zk_create$(EXEEXT) zk_get$(EXEEXT) zk_update$(EXEEXT) \
	zk_list$(EXEEXT) zk_delete$(EXEEXT) zk_loopcreate$(EXEEXT) \
	zk_get_acl$(EXEEXT) zk_set_acl$(EXEEXT) zk_exist$(EXEEXT) \
	zk_lock$(EXEEXT)
DIST_COMMON = README $(am__configure_deps) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in $(top_srcdir)/configure AUTHORS COPYING \
	ChangeLog INSTALL NEWS config.guess config.sub depcomp \
	install-sh ltmain.sh missing
subdir = .
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
am__CONFIG_DISTCLEAN_FILES = config.status config.cache config.log \
 configure.lineno configure.status.lineno
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am__objects_1 = zk_create-ZkAdaptor.$(OBJEXT) \
	zk_create-ZkToolAdaptor.$(OBJEXT) \
	zk_create-zk_common.$(OBJEXT)
am_zk_create_OBJECTS = $(am__objects_1) zk_create-zk_create.$(OBJEXT)
zk_create_OBJECTS = $(am_zk_create_OBJECTS)
zk_create_DEPENDENCIES =
am__objects_2 = zk_delete-ZkAdaptor.$(OBJEXT) \
	zk_delete-ZkToolAdaptor.$(OBJEXT) \
	zk_delete-zk_common.$(OBJEXT)
am_zk_delete_OBJECTS = $(am__objects_2) zk_delete-zk_delete.$(OBJEXT)
zk_delete_OBJECTS = $(am_zk_delete_OBJECTS)
zk_delete_DEPENDENCIES =
am__objects_3 = zk_exist-ZkAdaptor.$(OBJEXT) \
	zk_exist-ZkToolAdaptor.$(OBJEXT) zk_exist-zk_common.$(OBJEXT)
am_zk_exist_OBJECTS = $(am__objects_3) zk_exist-zk_exist.$(OBJEXT)
zk_exist_OBJECTS = $(am_zk_exist_OBJECTS)
zk_exist_DEPENDENCIES =
am__objects_4 = zk_get-ZkAdaptor.$(OBJEXT) \
	zk_get-ZkToolAdaptor.$(OBJEXT) zk_get-zk_common.$(OBJEXT)
am_zk_get_OBJECTS = $(am__objects_4) zk_get-zk_get.$(OBJEXT)
zk_get_OBJECTS = $(am_zk_get_OBJECTS)
zk_get_DEPENDENCIES =
am__objects_5 = zk_get_acl-ZkAdaptor.$(OBJEXT) \
	zk_get_acl-ZkToolAdaptor.$(OBJEXT) \
	zk_get_acl-zk_common.$(OBJEXT)
am_zk_get_acl_OBJECTS = $(am__objects_5) \
	zk_get_acl-zk_get_acl.$(OBJEXT)
zk_get_acl_OBJECTS = $(am_zk_get_acl_OBJECTS)
zk_get_acl_DEPENDENCIES =
am__objects_6 = zk_list-ZkAdaptor.$(OBJEXT) \
	zk_list-ZkToolAdaptor.$(OBJEXT) zk_list-zk_common.$(OBJEXT)
am_zk_list_OBJECTS = $(am__objects_6) zk_list-zk_list.$(OBJEXT)
zk_list_OBJECTS = $(am_zk_list_OBJECTS)
zk_list_DEPENDENCIES =
am__objects_7 = zk_lock-ZkAdaptor.$(OBJEXT) \
	zk_lock-ZkToolAdaptor.$(OBJEXT) zk_lock-zk_common.$(OBJEXT)
am_zk_lock_OBJECTS = $(am__objects_7) zk_lock-zk_lock.$(OBJEXT) \
	zk_lock-ZkLocker.$(OBJEXT)
zk_lock_OBJECTS = $(am_zk_lock_OBJECTS)
zk_lock_DEPENDENCIES =
am__objects_8 = zk_loopcreate-ZkAdaptor.$(OBJEXT) \
	zk_loopcreate-ZkToolAdaptor.$(OBJEXT) \
	zk_loopcreate-zk_common.$(OBJEXT)
am_zk_loopcreate_OBJECTS = $(am__objects_8) \
	zk_loopcreate-zk_loopcreate.$(OBJEXT)
zk_loopcreate_OBJECTS = $(am_zk_loopcreate_OBJECTS)
zk_loopcreate_DEPENDENCIES =
am__objects_9 = zk_set_acl-ZkAdaptor.$(OBJEXT) \
	zk_set_acl-ZkToolAdaptor.$(OBJEXT) \
	zk_set_acl-zk_common.$(OBJEXT)
am_zk_set_acl_OBJECTS = $(am__objects_9) \
	zk_set_acl-zk_set_acl.$(OBJEXT)
zk_set_acl_OBJECTS = $(am_zk_set_acl_OBJECTS)
zk_set_acl_DEPENDENCIES =
am__objects_10 = zk_update-ZkAdaptor.$(OBJEXT) \
	zk_update-ZkToolAdaptor.$(OBJEXT) \
	zk_update-zk_common.$(OBJEXT)
am_zk_update_OBJECTS = $(am__objects_10) zk_update-zk_update.$(OBJEXT)
zk_update_OBJECTS = $(am_zk_update_OBJECTS)
zk_update_DEPENDENCIES =
DEFAULT_INCLUDES = -I. -I$(srcdir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(zk_create_SOURCES) $(zk_delete_SOURCES) \
	$(zk_exist_SOURCES) $(zk_get_SOURCES) $(zk_get_acl_SOURCES) \
	$(zk_list_SOURCES) $(zk_lock_SOURCES) $(zk_loopcreate_SOURCES) \
	$(zk_set_acl_SOURCES) $(zk_update_SOURCES)
DIST_SOURCES = $(zk_create_SOURCES) $(zk_delete_SOURCES) \
	$(zk_exist_SOURCES) $(zk_get_SOURCES) $(zk_get_acl_SOURCES) \
	$(zk_list_SOURCES) $(zk_lock_SOURCES) $(zk_loopcreate_SOURCES) \
	$(zk_set_acl_SOURCES) $(zk_update_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
distdir = $(PACKAGE)-$(VERSION)
top_distdir = $(distdir)
am__remove_distdir = \
  { test ! -d $(distdir) \
    || { find $(distdir) -type d ! -perm -200 -exec chmod u+w {} ';' \
         && rm -fr $(distdir); }; }
DIST_ARCHIVES = $(distdir).tar.gz
GZIP_ENV = --best
distuninstallcheck_listfiles = find . -type f -print
distcleancheck_listfiles = find . -type f -print
ACLOCAL = @ACLOCAL@
AMDEP_FALSE = @AMDEP_FALSE@
AMDEP_TRUE = @AMDEP_TRUE@
AMTAR = @AMTAR@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
ECHO = @ECHO@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
EXEEXT = @EXEEXT@
F77 = @F77@
FFLAGS = @FFLAGS@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = -lpthread -lzookeeper_mt -lssl
LIBTOOL = @LIBTOOL@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RANLIB = @RANLIB@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
STRIP = @STRIP@
VERSION = @VERSION@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_F77 = @ac_ct_F77@
ac_ct_RANLIB = @ac_ct_RANLIB@
ac_ct_STRIP = @ac_ct_STRIP@
am__fastdepCC_FALSE = @am__fastdepCC_FALSE@
am__fastdepCC_TRUE = @am__fastdepCC_TRUE@
am__fastdepCXX_FALSE = @am__fastdepCXX_FALSE@
am__fastdepCXX_TRUE = @am__fastdepCXX_TRUE@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
datadir = @datadir@
exec_prefix = @exec_prefix@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
includedir = 
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
openssl_dir = @openssl_dir@
prefix = @prefix@
program_transform_name = @program_transform_name@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
zk_dir = @zk_dir@
pkgconfigdir = 
BUILD_DATE = $(shell date +%F)
COMMON_SRC = ZkAdaptor.cpp ZkToolAdaptor.cpp zk_common.cpp
zk_create_CPPFLAGS = -W -Wall -Wno-deprecated
zk_create_SOURCES = $(COMMON_SRC) zk_create.cpp
zk_create_LDADD = 
zk_create_LDFLAGS = -L@zk_dir@/lib
zk_loopcreate_CPPFLAGS = -W -Wall -Wno-deprecated
zk_loopcreate_SOURCES = $(COMMON_SRC) zk_loopcreate.cpp 
zk_loopcreate_LDADD = 
zk_loopcreate_LDFLAGS = -L@zk_dir@/lib
zk_get_CPPFLAGS = -W -Wall -Wno-deprecated 
zk_get_SOURCES = $(COMMON_SRC) zk_get.cpp 
zk_get_LDADD = 
zk_get_LDFLAGS = -L@zk_dir@/lib
zk_delete_CPPFLAGS = -W -Wall -Wno-deprecated
zk_delete_SOURCES = $(COMMON_SRC) zk_delete.cpp  
zk_delete_LDADD = 
zk_delete_LDFLAGS = -L@zk_dir@/lib
zk_update_CPPFLAGS = -W -Wall -Wno-deprecated
zk_update_SOURCES = $(COMMON_SRC) zk_update.cpp  
zk_update_LDADD = 
zk_update_LDFLAGS = -L@zk_dir@/lib
zk_list_CPPFLAGS = -W -Wall -Wno-deprecated
zk_list_SOURCES = $(COMMON_SRC) zk_list.cpp
zk_list_LDADD = 
zk_list_LDFLAGS = -L@zk_dir@/lib
zk_get_acl_CPPFLAGS = -W -Wall -Wno-deprecated
zk_get_acl_SOURCES = $(COMMON_SRC)  zk_get_acl.cpp
zk_get_acl_LDADD = 
zk_get_acl_LDFLAGS = -L@zk_dir@/lib
zk_set_acl_CPPFLAGS = -W -Wall -Wno-deprecated
zk_set_acl_SOURCES = $(COMMON_SRC)  zk_set_acl.cpp 
zk_set_acl_LDADD = 
zk_set_acl_LDFLAGS = -L@zk_dir@/lib -L@openssl_dir@/lib
zk_exist_CPPFLAGS = -W -Wall -Wno-deprecated
zk_exist_SOURCES = $(COMMON_SRC)  zk_exist.cpp
zk_exist_LDADD = 
zk_exist_LDFLAGS = -L@zk_dir@/lib -L@openssl_dir@/lib
zk_lock_CPPFLAGS = -W -Wall -Wno-deprecated
zk_lock_SOURCES = $(COMMON_SRC)  zk_lock.cpp ZkLocker.cpp
zk_lock_LDADD = 
zk_lock_LDFLAGS = -L@zk_dir@/lib -L@openssl_dir@/lib 
INCLUDES = -I@zk_dir@/include -I@openssl_dir@/include
all: all-am

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
am--refresh:
	@:
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      echo ' cd $(srcdir) && $(AUTOMAKE) --gnu '; \
	      cd $(srcdir) && $(AUTOMAKE) --gnu  \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    echo ' $(SHELL) ./config.status'; \
	    $(SHELL) ./config.status;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	$(SHELL) ./config.status --recheck

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(srcdir) && $(AUTOCONF)
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(srcdir) && $(ACLOCAL) $(ACLOCAL_AMFLAGS)
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(mkdir_p) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
zk_create$(EXEEXT): $(zk_create_OBJECTS) $(zk_create_DEPENDENCIES) 
	@rm -f zk_create$(EXEEXT)
	$(CXXLINK) $(zk_create_LDFLAGS) $(zk_create_OBJECTS) $(zk_create_LDADD) $(LIBS)
zk_delete$(EXEEXT): $(zk_delete_OBJECTS) $(zk_delete_DEPENDENCIES) 
	@rm -f zk_delete$(EXEEXT)
	$(CXXLINK) $(zk_delete_LDFLAGS) $(zk_delete_OBJECTS) $(zk_delete_LDADD) $(LIBS)
zk_exist$(EXEEXT): $(zk_exist_OBJECTS) $(zk_exist_DEPENDENCIES) 
	@rm -f zk_exist$(EXEEXT)
	$(CXXLINK) $(zk_exist_LDFLAGS) $(zk_exist_OBJECTS) $(zk_exist_LDADD) $(LIBS)
zk_get$(EXEEXT): $(zk_get_OBJECTS) $(zk_get_DEPENDENCIES) 
	@rm -f zk_get$(EXEEXT)
	$(CXXLINK) $(zk_get_LDFLAGS) $(zk_get_OBJECTS) $(zk_get_LDADD) $(LIBS)
zk_get_acl$(EXEEXT): $(zk_get_acl_OBJECTS) $(zk_get_acl_DEPENDENCIES) 
	@rm -f zk_get_acl$(EXEEXT)
	$(CXXLINK) $(zk_get_acl_LDFLAGS) $(zk_get_acl_OBJECTS) $(zk_get_acl_LDADD) $(LIBS)
zk_list$(EXEEXT): $(zk_list_OBJECTS) $(zk_list_DEPENDENCIES) 
	@rm -f zk_list$(EXEEXT)
	$(CXXLINK) $(zk_list_LDFLAGS) $(zk_list_OBJECTS) $(zk_list_LDADD) $(LIBS)
zk_lock$(EXEEXT): $(zk_lock_OBJECTS) $(zk_lock_DEPENDENCIES) 
	@rm -f zk_lock$(EXEEXT)
	$(CXXLINK) $(zk_lock_LDFLAGS) $(zk_lock_OBJECTS) $(zk_lock_LDADD) $(LIBS)
zk_loopcreate$(EXEEXT): $(zk_loopcreate_OBJECTS) $(zk_loopcreate_DEPENDENCIES) 
	@rm -f zk_loopcreate$(EXEEXT)
	$(CXXLINK) $(zk_loopcreate_LDFLAGS) $(zk_loopcreate_OBJECTS) $(zk_loopcreate_LDADD) $(LIBS)
zk_set_acl$(EXEEXT): $(zk_set_acl_OBJECTS) $(zk_set_acl_DEPENDENCIES) 
	@rm -f zk_set_acl$(EXEEXT)
	$(CXXLINK) $(zk_set_acl_LDFLAGS) $(zk_set_acl_OBJECTS) $(zk_set_acl_LDADD) $(LIBS)
zk_update$(EXEEXT): $(zk_update_OBJECTS) $(zk_update_DEPENDENCIES) 
	@rm -f zk_update$(EXEEXT)
	$(CXXLINK) $(zk_update_LDFLAGS) $(zk_update_OBJECTS) $(zk_update_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_create-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_create-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_create-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_create-zk_create.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_delete-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_delete-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_delete-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_delete-zk_delete.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_exist-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_exist-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_exist-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_exist-zk_exist.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get-zk_get.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get_acl-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get_acl-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_get_acl-zk_get_acl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_list-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_list-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_list-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_list-zk_list.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_lock-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_lock-ZkLocker.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_lock-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_lock-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_lock-zk_lock.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_loopcreate-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_loopcreate-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_loopcreate-zk_loopcreate.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_set_acl-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_set_acl-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_set_acl-zk_set_acl.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_update-ZkAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_update-ZkToolAdaptor.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_update-zk_common.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/zk_update-zk_update.Po@am__quote@

.cpp.o:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
@am__fastdepCXX_TRUE@	if $(CXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ `$(CYGPATH_W) '$<'`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Po"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
@am__fastdepCXX_TRUE@	if $(LTCXXCOMPILE) -MT $@ -MD -MP -MF "$(DEPDIR)/$*.Tpo" -c -o $@ $<; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/$*.Tpo" "$(DEPDIR)/$*.Plo"; else rm -f "$(DEPDIR)/$*.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(LTCXXCOMPILE) -c -o $@ $<

zk_create-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_create-ZkAdaptor.Tpo" -c -o zk_create-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-ZkAdaptor.Tpo" "$(DEPDIR)/zk_create-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_create-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_create-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_create-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_create-ZkAdaptor.Tpo" -c -o zk_create-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-ZkAdaptor.Tpo" "$(DEPDIR)/zk_create-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_create-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_create-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_create-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_create-ZkToolAdaptor.Tpo" -c -o zk_create-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_create-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_create-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_create-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_create-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_create-ZkToolAdaptor.Tpo" -c -o zk_create-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_create-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_create-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_create-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_create-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_create-zk_common.Tpo" -c -o zk_create-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-zk_common.Tpo" "$(DEPDIR)/zk_create-zk_common.Po"; else rm -f "$(DEPDIR)/zk_create-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_create-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_create-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_create-zk_common.Tpo" -c -o zk_create-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-zk_common.Tpo" "$(DEPDIR)/zk_create-zk_common.Po"; else rm -f "$(DEPDIR)/zk_create-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_create-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_create-zk_create.o: zk_create.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-zk_create.o -MD -MP -MF "$(DEPDIR)/zk_create-zk_create.Tpo" -c -o zk_create-zk_create.o `test -f 'zk_create.cpp' || echo '$(srcdir)/'`zk_create.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-zk_create.Tpo" "$(DEPDIR)/zk_create-zk_create.Po"; else rm -f "$(DEPDIR)/zk_create-zk_create.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_create.cpp' object='zk_create-zk_create.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-zk_create.o `test -f 'zk_create.cpp' || echo '$(srcdir)/'`zk_create.cpp

zk_create-zk_create.obj: zk_create.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_create-zk_create.obj -MD -MP -MF "$(DEPDIR)/zk_create-zk_create.Tpo" -c -o zk_create-zk_create.obj `if test -f 'zk_create.cpp'; then $(CYGPATH_W) 'zk_create.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_create.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_create-zk_create.Tpo" "$(DEPDIR)/zk_create-zk_create.Po"; else rm -f "$(DEPDIR)/zk_create-zk_create.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_create.cpp' object='zk_create-zk_create.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_create_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_create-zk_create.obj `if test -f 'zk_create.cpp'; then $(CYGPATH_W) 'zk_create.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_create.cpp'; fi`

zk_delete-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_delete-ZkAdaptor.Tpo" -c -o zk_delete-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-ZkAdaptor.Tpo" "$(DEPDIR)/zk_delete-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_delete-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_delete-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_delete-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_delete-ZkAdaptor.Tpo" -c -o zk_delete-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-ZkAdaptor.Tpo" "$(DEPDIR)/zk_delete-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_delete-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_delete-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_delete-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_delete-ZkToolAdaptor.Tpo" -c -o zk_delete-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_delete-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_delete-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_delete-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_delete-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_delete-ZkToolAdaptor.Tpo" -c -o zk_delete-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_delete-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_delete-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_delete-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_delete-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_delete-zk_common.Tpo" -c -o zk_delete-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-zk_common.Tpo" "$(DEPDIR)/zk_delete-zk_common.Po"; else rm -f "$(DEPDIR)/zk_delete-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_delete-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_delete-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_delete-zk_common.Tpo" -c -o zk_delete-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-zk_common.Tpo" "$(DEPDIR)/zk_delete-zk_common.Po"; else rm -f "$(DEPDIR)/zk_delete-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_delete-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_delete-zk_delete.o: zk_delete.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-zk_delete.o -MD -MP -MF "$(DEPDIR)/zk_delete-zk_delete.Tpo" -c -o zk_delete-zk_delete.o `test -f 'zk_delete.cpp' || echo '$(srcdir)/'`zk_delete.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-zk_delete.Tpo" "$(DEPDIR)/zk_delete-zk_delete.Po"; else rm -f "$(DEPDIR)/zk_delete-zk_delete.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_delete.cpp' object='zk_delete-zk_delete.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-zk_delete.o `test -f 'zk_delete.cpp' || echo '$(srcdir)/'`zk_delete.cpp

zk_delete-zk_delete.obj: zk_delete.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_delete-zk_delete.obj -MD -MP -MF "$(DEPDIR)/zk_delete-zk_delete.Tpo" -c -o zk_delete-zk_delete.obj `if test -f 'zk_delete.cpp'; then $(CYGPATH_W) 'zk_delete.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_delete.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_delete-zk_delete.Tpo" "$(DEPDIR)/zk_delete-zk_delete.Po"; else rm -f "$(DEPDIR)/zk_delete-zk_delete.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_delete.cpp' object='zk_delete-zk_delete.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_delete_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_delete-zk_delete.obj `if test -f 'zk_delete.cpp'; then $(CYGPATH_W) 'zk_delete.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_delete.cpp'; fi`

zk_exist-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_exist-ZkAdaptor.Tpo" -c -o zk_exist-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-ZkAdaptor.Tpo" "$(DEPDIR)/zk_exist-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_exist-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_exist-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_exist-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_exist-ZkAdaptor.Tpo" -c -o zk_exist-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-ZkAdaptor.Tpo" "$(DEPDIR)/zk_exist-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_exist-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_exist-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_exist-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_exist-ZkToolAdaptor.Tpo" -c -o zk_exist-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_exist-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_exist-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_exist-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_exist-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_exist-ZkToolAdaptor.Tpo" -c -o zk_exist-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_exist-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_exist-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_exist-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_exist-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_exist-zk_common.Tpo" -c -o zk_exist-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-zk_common.Tpo" "$(DEPDIR)/zk_exist-zk_common.Po"; else rm -f "$(DEPDIR)/zk_exist-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_exist-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_exist-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_exist-zk_common.Tpo" -c -o zk_exist-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-zk_common.Tpo" "$(DEPDIR)/zk_exist-zk_common.Po"; else rm -f "$(DEPDIR)/zk_exist-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_exist-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_exist-zk_exist.o: zk_exist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-zk_exist.o -MD -MP -MF "$(DEPDIR)/zk_exist-zk_exist.Tpo" -c -o zk_exist-zk_exist.o `test -f 'zk_exist.cpp' || echo '$(srcdir)/'`zk_exist.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-zk_exist.Tpo" "$(DEPDIR)/zk_exist-zk_exist.Po"; else rm -f "$(DEPDIR)/zk_exist-zk_exist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_exist.cpp' object='zk_exist-zk_exist.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-zk_exist.o `test -f 'zk_exist.cpp' || echo '$(srcdir)/'`zk_exist.cpp

zk_exist-zk_exist.obj: zk_exist.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_exist-zk_exist.obj -MD -MP -MF "$(DEPDIR)/zk_exist-zk_exist.Tpo" -c -o zk_exist-zk_exist.obj `if test -f 'zk_exist.cpp'; then $(CYGPATH_W) 'zk_exist.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_exist.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_exist-zk_exist.Tpo" "$(DEPDIR)/zk_exist-zk_exist.Po"; else rm -f "$(DEPDIR)/zk_exist-zk_exist.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_exist.cpp' object='zk_exist-zk_exist.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_exist_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_exist-zk_exist.obj `if test -f 'zk_exist.cpp'; then $(CYGPATH_W) 'zk_exist.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_exist.cpp'; fi`

zk_get-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_get-ZkAdaptor.Tpo" -c -o zk_get-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-ZkAdaptor.Tpo" "$(DEPDIR)/zk_get-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_get-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_get-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_get-ZkAdaptor.Tpo" -c -o zk_get-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-ZkAdaptor.Tpo" "$(DEPDIR)/zk_get-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_get-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_get-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_get-ZkToolAdaptor.Tpo" -c -o zk_get-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_get-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_get-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_get-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_get-ZkToolAdaptor.Tpo" -c -o zk_get-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_get-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_get-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_get-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_get-zk_common.Tpo" -c -o zk_get-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-zk_common.Tpo" "$(DEPDIR)/zk_get-zk_common.Po"; else rm -f "$(DEPDIR)/zk_get-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_get-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_get-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_get-zk_common.Tpo" -c -o zk_get-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-zk_common.Tpo" "$(DEPDIR)/zk_get-zk_common.Po"; else rm -f "$(DEPDIR)/zk_get-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_get-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_get-zk_get.o: zk_get.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-zk_get.o -MD -MP -MF "$(DEPDIR)/zk_get-zk_get.Tpo" -c -o zk_get-zk_get.o `test -f 'zk_get.cpp' || echo '$(srcdir)/'`zk_get.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-zk_get.Tpo" "$(DEPDIR)/zk_get-zk_get.Po"; else rm -f "$(DEPDIR)/zk_get-zk_get.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_get.cpp' object='zk_get-zk_get.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-zk_get.o `test -f 'zk_get.cpp' || echo '$(srcdir)/'`zk_get.cpp

zk_get-zk_get.obj: zk_get.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get-zk_get.obj -MD -MP -MF "$(DEPDIR)/zk_get-zk_get.Tpo" -c -o zk_get-zk_get.obj `if test -f 'zk_get.cpp'; then $(CYGPATH_W) 'zk_get.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_get.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get-zk_get.Tpo" "$(DEPDIR)/zk_get-zk_get.Po"; else rm -f "$(DEPDIR)/zk_get-zk_get.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_get.cpp' object='zk_get-zk_get.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get-zk_get.obj `if test -f 'zk_get.cpp'; then $(CYGPATH_W) 'zk_get.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_get.cpp'; fi`

zk_get_acl-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_get_acl-ZkAdaptor.Tpo" -c -o zk_get_acl-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-ZkAdaptor.Tpo" "$(DEPDIR)/zk_get_acl-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get_acl-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_get_acl-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_get_acl-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_get_acl-ZkAdaptor.Tpo" -c -o zk_get_acl-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-ZkAdaptor.Tpo" "$(DEPDIR)/zk_get_acl-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get_acl-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_get_acl-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_get_acl-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Tpo" -c -o zk_get_acl-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_get_acl-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_get_acl-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Tpo" -c -o zk_get_acl-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_get_acl-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_get_acl-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_get_acl-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_get_acl-zk_common.Tpo" -c -o zk_get_acl-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-zk_common.Tpo" "$(DEPDIR)/zk_get_acl-zk_common.Po"; else rm -f "$(DEPDIR)/zk_get_acl-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_get_acl-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_get_acl-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_get_acl-zk_common.Tpo" -c -o zk_get_acl-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-zk_common.Tpo" "$(DEPDIR)/zk_get_acl-zk_common.Po"; else rm -f "$(DEPDIR)/zk_get_acl-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_get_acl-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_get_acl-zk_get_acl.o: zk_get_acl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-zk_get_acl.o -MD -MP -MF "$(DEPDIR)/zk_get_acl-zk_get_acl.Tpo" -c -o zk_get_acl-zk_get_acl.o `test -f 'zk_get_acl.cpp' || echo '$(srcdir)/'`zk_get_acl.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-zk_get_acl.Tpo" "$(DEPDIR)/zk_get_acl-zk_get_acl.Po"; else rm -f "$(DEPDIR)/zk_get_acl-zk_get_acl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_get_acl.cpp' object='zk_get_acl-zk_get_acl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-zk_get_acl.o `test -f 'zk_get_acl.cpp' || echo '$(srcdir)/'`zk_get_acl.cpp

zk_get_acl-zk_get_acl.obj: zk_get_acl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_get_acl-zk_get_acl.obj -MD -MP -MF "$(DEPDIR)/zk_get_acl-zk_get_acl.Tpo" -c -o zk_get_acl-zk_get_acl.obj `if test -f 'zk_get_acl.cpp'; then $(CYGPATH_W) 'zk_get_acl.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_get_acl.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_get_acl-zk_get_acl.Tpo" "$(DEPDIR)/zk_get_acl-zk_get_acl.Po"; else rm -f "$(DEPDIR)/zk_get_acl-zk_get_acl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_get_acl.cpp' object='zk_get_acl-zk_get_acl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_get_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_get_acl-zk_get_acl.obj `if test -f 'zk_get_acl.cpp'; then $(CYGPATH_W) 'zk_get_acl.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_get_acl.cpp'; fi`

zk_list-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_list-ZkAdaptor.Tpo" -c -o zk_list-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-ZkAdaptor.Tpo" "$(DEPDIR)/zk_list-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_list-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_list-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_list-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_list-ZkAdaptor.Tpo" -c -o zk_list-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-ZkAdaptor.Tpo" "$(DEPDIR)/zk_list-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_list-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_list-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_list-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_list-ZkToolAdaptor.Tpo" -c -o zk_list-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_list-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_list-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_list-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_list-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_list-ZkToolAdaptor.Tpo" -c -o zk_list-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_list-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_list-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_list-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_list-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_list-zk_common.Tpo" -c -o zk_list-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-zk_common.Tpo" "$(DEPDIR)/zk_list-zk_common.Po"; else rm -f "$(DEPDIR)/zk_list-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_list-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_list-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_list-zk_common.Tpo" -c -o zk_list-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-zk_common.Tpo" "$(DEPDIR)/zk_list-zk_common.Po"; else rm -f "$(DEPDIR)/zk_list-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_list-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_list-zk_list.o: zk_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-zk_list.o -MD -MP -MF "$(DEPDIR)/zk_list-zk_list.Tpo" -c -o zk_list-zk_list.o `test -f 'zk_list.cpp' || echo '$(srcdir)/'`zk_list.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-zk_list.Tpo" "$(DEPDIR)/zk_list-zk_list.Po"; else rm -f "$(DEPDIR)/zk_list-zk_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_list.cpp' object='zk_list-zk_list.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-zk_list.o `test -f 'zk_list.cpp' || echo '$(srcdir)/'`zk_list.cpp

zk_list-zk_list.obj: zk_list.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_list-zk_list.obj -MD -MP -MF "$(DEPDIR)/zk_list-zk_list.Tpo" -c -o zk_list-zk_list.obj `if test -f 'zk_list.cpp'; then $(CYGPATH_W) 'zk_list.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_list.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_list-zk_list.Tpo" "$(DEPDIR)/zk_list-zk_list.Po"; else rm -f "$(DEPDIR)/zk_list-zk_list.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_list.cpp' object='zk_list-zk_list.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_list_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_list-zk_list.obj `if test -f 'zk_list.cpp'; then $(CYGPATH_W) 'zk_list.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_list.cpp'; fi`

zk_lock-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_lock-ZkAdaptor.Tpo" -c -o zk_lock-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-ZkAdaptor.Tpo" "$(DEPDIR)/zk_lock-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_lock-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_lock-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_lock-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_lock-ZkAdaptor.Tpo" -c -o zk_lock-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-ZkAdaptor.Tpo" "$(DEPDIR)/zk_lock-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_lock-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_lock-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_lock-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_lock-ZkToolAdaptor.Tpo" -c -o zk_lock-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_lock-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_lock-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_lock-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_lock-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_lock-ZkToolAdaptor.Tpo" -c -o zk_lock-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_lock-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_lock-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_lock-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_lock-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_lock-zk_common.Tpo" -c -o zk_lock-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-zk_common.Tpo" "$(DEPDIR)/zk_lock-zk_common.Po"; else rm -f "$(DEPDIR)/zk_lock-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_lock-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_lock-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_lock-zk_common.Tpo" -c -o zk_lock-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-zk_common.Tpo" "$(DEPDIR)/zk_lock-zk_common.Po"; else rm -f "$(DEPDIR)/zk_lock-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_lock-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_lock-zk_lock.o: zk_lock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-zk_lock.o -MD -MP -MF "$(DEPDIR)/zk_lock-zk_lock.Tpo" -c -o zk_lock-zk_lock.o `test -f 'zk_lock.cpp' || echo '$(srcdir)/'`zk_lock.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-zk_lock.Tpo" "$(DEPDIR)/zk_lock-zk_lock.Po"; else rm -f "$(DEPDIR)/zk_lock-zk_lock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_lock.cpp' object='zk_lock-zk_lock.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-zk_lock.o `test -f 'zk_lock.cpp' || echo '$(srcdir)/'`zk_lock.cpp

zk_lock-zk_lock.obj: zk_lock.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-zk_lock.obj -MD -MP -MF "$(DEPDIR)/zk_lock-zk_lock.Tpo" -c -o zk_lock-zk_lock.obj `if test -f 'zk_lock.cpp'; then $(CYGPATH_W) 'zk_lock.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_lock.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-zk_lock.Tpo" "$(DEPDIR)/zk_lock-zk_lock.Po"; else rm -f "$(DEPDIR)/zk_lock-zk_lock.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_lock.cpp' object='zk_lock-zk_lock.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-zk_lock.obj `if test -f 'zk_lock.cpp'; then $(CYGPATH_W) 'zk_lock.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_lock.cpp'; fi`

zk_lock-ZkLocker.o: ZkLocker.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-ZkLocker.o -MD -MP -MF "$(DEPDIR)/zk_lock-ZkLocker.Tpo" -c -o zk_lock-ZkLocker.o `test -f 'ZkLocker.cpp' || echo '$(srcdir)/'`ZkLocker.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-ZkLocker.Tpo" "$(DEPDIR)/zk_lock-ZkLocker.Po"; else rm -f "$(DEPDIR)/zk_lock-ZkLocker.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkLocker.cpp' object='zk_lock-ZkLocker.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-ZkLocker.o `test -f 'ZkLocker.cpp' || echo '$(srcdir)/'`ZkLocker.cpp

zk_lock-ZkLocker.obj: ZkLocker.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_lock-ZkLocker.obj -MD -MP -MF "$(DEPDIR)/zk_lock-ZkLocker.Tpo" -c -o zk_lock-ZkLocker.obj `if test -f 'ZkLocker.cpp'; then $(CYGPATH_W) 'ZkLocker.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkLocker.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_lock-ZkLocker.Tpo" "$(DEPDIR)/zk_lock-ZkLocker.Po"; else rm -f "$(DEPDIR)/zk_lock-ZkLocker.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkLocker.cpp' object='zk_lock-ZkLocker.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_lock_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_lock-ZkLocker.obj `if test -f 'ZkLocker.cpp'; then $(CYGPATH_W) 'ZkLocker.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkLocker.cpp'; fi`

zk_loopcreate-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Tpo" -c -o zk_loopcreate-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Tpo" "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_loopcreate-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_loopcreate-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Tpo" -c -o zk_loopcreate-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Tpo" "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_loopcreate-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_loopcreate-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Tpo" -c -o zk_loopcreate-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_loopcreate-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_loopcreate-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Tpo" -c -o zk_loopcreate-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_loopcreate-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_loopcreate-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_loopcreate-zk_common.Tpo" -c -o zk_loopcreate-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-zk_common.Tpo" "$(DEPDIR)/zk_loopcreate-zk_common.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_loopcreate-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_loopcreate-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_loopcreate-zk_common.Tpo" -c -o zk_loopcreate-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-zk_common.Tpo" "$(DEPDIR)/zk_loopcreate-zk_common.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_loopcreate-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_loopcreate-zk_loopcreate.o: zk_loopcreate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-zk_loopcreate.o -MD -MP -MF "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Tpo" -c -o zk_loopcreate-zk_loopcreate.o `test -f 'zk_loopcreate.cpp' || echo '$(srcdir)/'`zk_loopcreate.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Tpo" "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_loopcreate.cpp' object='zk_loopcreate-zk_loopcreate.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-zk_loopcreate.o `test -f 'zk_loopcreate.cpp' || echo '$(srcdir)/'`zk_loopcreate.cpp

zk_loopcreate-zk_loopcreate.obj: zk_loopcreate.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_loopcreate-zk_loopcreate.obj -MD -MP -MF "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Tpo" -c -o zk_loopcreate-zk_loopcreate.obj `if test -f 'zk_loopcreate.cpp'; then $(CYGPATH_W) 'zk_loopcreate.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_loopcreate.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Tpo" "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Po"; else rm -f "$(DEPDIR)/zk_loopcreate-zk_loopcreate.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_loopcreate.cpp' object='zk_loopcreate-zk_loopcreate.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_loopcreate_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_loopcreate-zk_loopcreate.obj `if test -f 'zk_loopcreate.cpp'; then $(CYGPATH_W) 'zk_loopcreate.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_loopcreate.cpp'; fi`

zk_set_acl-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_set_acl-ZkAdaptor.Tpo" -c -o zk_set_acl-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-ZkAdaptor.Tpo" "$(DEPDIR)/zk_set_acl-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_set_acl-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_set_acl-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_set_acl-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_set_acl-ZkAdaptor.Tpo" -c -o zk_set_acl-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-ZkAdaptor.Tpo" "$(DEPDIR)/zk_set_acl-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_set_acl-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_set_acl-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_set_acl-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Tpo" -c -o zk_set_acl-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_set_acl-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_set_acl-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Tpo" -c -o zk_set_acl-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_set_acl-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_set_acl-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_set_acl-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_set_acl-zk_common.Tpo" -c -o zk_set_acl-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-zk_common.Tpo" "$(DEPDIR)/zk_set_acl-zk_common.Po"; else rm -f "$(DEPDIR)/zk_set_acl-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_set_acl-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_set_acl-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_set_acl-zk_common.Tpo" -c -o zk_set_acl-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-zk_common.Tpo" "$(DEPDIR)/zk_set_acl-zk_common.Po"; else rm -f "$(DEPDIR)/zk_set_acl-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_set_acl-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_set_acl-zk_set_acl.o: zk_set_acl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-zk_set_acl.o -MD -MP -MF "$(DEPDIR)/zk_set_acl-zk_set_acl.Tpo" -c -o zk_set_acl-zk_set_acl.o `test -f 'zk_set_acl.cpp' || echo '$(srcdir)/'`zk_set_acl.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-zk_set_acl.Tpo" "$(DEPDIR)/zk_set_acl-zk_set_acl.Po"; else rm -f "$(DEPDIR)/zk_set_acl-zk_set_acl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_set_acl.cpp' object='zk_set_acl-zk_set_acl.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-zk_set_acl.o `test -f 'zk_set_acl.cpp' || echo '$(srcdir)/'`zk_set_acl.cpp

zk_set_acl-zk_set_acl.obj: zk_set_acl.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_set_acl-zk_set_acl.obj -MD -MP -MF "$(DEPDIR)/zk_set_acl-zk_set_acl.Tpo" -c -o zk_set_acl-zk_set_acl.obj `if test -f 'zk_set_acl.cpp'; then $(CYGPATH_W) 'zk_set_acl.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_set_acl.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_set_acl-zk_set_acl.Tpo" "$(DEPDIR)/zk_set_acl-zk_set_acl.Po"; else rm -f "$(DEPDIR)/zk_set_acl-zk_set_acl.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_set_acl.cpp' object='zk_set_acl-zk_set_acl.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_set_acl_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_set_acl-zk_set_acl.obj `if test -f 'zk_set_acl.cpp'; then $(CYGPATH_W) 'zk_set_acl.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_set_acl.cpp'; fi`

zk_update-ZkAdaptor.o: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-ZkAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_update-ZkAdaptor.Tpo" -c -o zk_update-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-ZkAdaptor.Tpo" "$(DEPDIR)/zk_update-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_update-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_update-ZkAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-ZkAdaptor.o `test -f 'ZkAdaptor.cpp' || echo '$(srcdir)/'`ZkAdaptor.cpp

zk_update-ZkAdaptor.obj: ZkAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-ZkAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_update-ZkAdaptor.Tpo" -c -o zk_update-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-ZkAdaptor.Tpo" "$(DEPDIR)/zk_update-ZkAdaptor.Po"; else rm -f "$(DEPDIR)/zk_update-ZkAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkAdaptor.cpp' object='zk_update-ZkAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-ZkAdaptor.obj `if test -f 'ZkAdaptor.cpp'; then $(CYGPATH_W) 'ZkAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkAdaptor.cpp'; fi`

zk_update-ZkToolAdaptor.o: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-ZkToolAdaptor.o -MD -MP -MF "$(DEPDIR)/zk_update-ZkToolAdaptor.Tpo" -c -o zk_update-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_update-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_update-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_update-ZkToolAdaptor.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-ZkToolAdaptor.o `test -f 'ZkToolAdaptor.cpp' || echo '$(srcdir)/'`ZkToolAdaptor.cpp

zk_update-ZkToolAdaptor.obj: ZkToolAdaptor.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-ZkToolAdaptor.obj -MD -MP -MF "$(DEPDIR)/zk_update-ZkToolAdaptor.Tpo" -c -o zk_update-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-ZkToolAdaptor.Tpo" "$(DEPDIR)/zk_update-ZkToolAdaptor.Po"; else rm -f "$(DEPDIR)/zk_update-ZkToolAdaptor.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='ZkToolAdaptor.cpp' object='zk_update-ZkToolAdaptor.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-ZkToolAdaptor.obj `if test -f 'ZkToolAdaptor.cpp'; then $(CYGPATH_W) 'ZkToolAdaptor.cpp'; else $(CYGPATH_W) '$(srcdir)/ZkToolAdaptor.cpp'; fi`

zk_update-zk_common.o: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-zk_common.o -MD -MP -MF "$(DEPDIR)/zk_update-zk_common.Tpo" -c -o zk_update-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-zk_common.Tpo" "$(DEPDIR)/zk_update-zk_common.Po"; else rm -f "$(DEPDIR)/zk_update-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_update-zk_common.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-zk_common.o `test -f 'zk_common.cpp' || echo '$(srcdir)/'`zk_common.cpp

zk_update-zk_common.obj: zk_common.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-zk_common.obj -MD -MP -MF "$(DEPDIR)/zk_update-zk_common.Tpo" -c -o zk_update-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-zk_common.Tpo" "$(DEPDIR)/zk_update-zk_common.Po"; else rm -f "$(DEPDIR)/zk_update-zk_common.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_common.cpp' object='zk_update-zk_common.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-zk_common.obj `if test -f 'zk_common.cpp'; then $(CYGPATH_W) 'zk_common.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_common.cpp'; fi`

zk_update-zk_update.o: zk_update.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-zk_update.o -MD -MP -MF "$(DEPDIR)/zk_update-zk_update.Tpo" -c -o zk_update-zk_update.o `test -f 'zk_update.cpp' || echo '$(srcdir)/'`zk_update.cpp; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-zk_update.Tpo" "$(DEPDIR)/zk_update-zk_update.Po"; else rm -f "$(DEPDIR)/zk_update-zk_update.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_update.cpp' object='zk_update-zk_update.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-zk_update.o `test -f 'zk_update.cpp' || echo '$(srcdir)/'`zk_update.cpp

zk_update-zk_update.obj: zk_update.cpp
@am__fastdepCXX_TRUE@	if $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT zk_update-zk_update.obj -MD -MP -MF "$(DEPDIR)/zk_update-zk_update.Tpo" -c -o zk_update-zk_update.obj `if test -f 'zk_update.cpp'; then $(CYGPATH_W) 'zk_update.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_update.cpp'; fi`; \
@am__fastdepCXX_TRUE@	then mv -f "$(DEPDIR)/zk_update-zk_update.Tpo" "$(DEPDIR)/zk_update-zk_update.Po"; else rm -f "$(DEPDIR)/zk_update-zk_update.Tpo"; exit 1; fi
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	source='zk_update.cpp' object='zk_update-zk_update.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCXX_FALSE@	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCXX_FALSE@	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(zk_update_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o zk_update-zk_update.obj `if test -f 'zk_update.cpp'; then $(CYGPATH_W) 'zk_update.cpp'; else $(CYGPATH_W) '$(srcdir)/zk_update.cpp'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

distclean-libtool:
	-rm -f libtool
uninstall-info-am:

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	$(am__remove_distdir)
	mkdir $(distdir)
	@srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's|.|.|g'`; \
	list='$(DISTFILES)'; for file in $$list; do \
	  case $$file in \
	    $(srcdir)/*) file=`echo "$$file" | sed "s|^$$srcdirstrip/||"`;; \
	    $(top_srcdir)/*) file=`echo "$$file" | sed "s|^$$topsrcdirstrip/|$(top_builddir)/|"`;; \
	  esac; \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    dir="/$$dir"; \
	    $(mkdir_p) "$(distdir)$$dir"; \
	  else \
	    dir=''; \
	  fi; \
	  if test -d $$d/$$file; then \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	-find $(distdir) -type d ! -perm -777 -exec chmod a+rwx {} \; -o \
	  ! -type d ! -perm -444 -links 1 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -400 -exec chmod a+r {} \; -o \
	  ! -type d ! -perm -444 -exec $(SHELL) $(install_sh) -c -m a+r {} {} \; \
	|| chmod -R a+r $(distdir)
dist-gzip: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

dist-bzip2: distdir
	tardir=$(distdir) && $(am__tar) | bzip2 -9 -c >$(distdir).tar.bz2
	$(am__remove_distdir)

dist-tarZ: distdir
	tardir=$(distdir) && $(am__tar) | compress -c >$(distdir).tar.Z
	$(am__remove_distdir)

dist-shar: distdir
	shar $(distdir) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).shar.gz
	$(am__remove_distdir)

dist-zip: distdir
	-rm -f $(distdir).zip
	zip -rq $(distdir).zip $(distdir)
	$(am__remove_distdir)

dist dist-all: distdir
	tardir=$(distdir) && $(am__tar) | GZIP=$(GZIP_ENV) gzip -c >$(distdir).tar.gz
	$(am__remove_distdir)

# This target untars the dist file and tries a VPATH configuration.  Then
# it guarantees that the distribution is self-contained by making another
# tarfile.
distcheck: dist
	case '$(DIST_ARCHIVES)' in \
	*.tar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).tar.gz | $(am__untar) ;;\
	*.tar.bz2*) \
	  bunzip2 -c $(distdir).tar.bz2 | $(am__untar) ;;\
	*.tar.Z*) \
	  uncompress -c $(distdir).tar.Z | $(am__untar) ;;\
	*.shar.gz*) \
	  GZIP=$(GZIP_ENV) gunzip -c $(distdir).shar.gz | unshar ;;\
	*.zip*) \
	  unzip $(distdir).zip ;;\
	esac
	chmod -R a-w $(distdir); chmod a+w $(distdir)
	mkdir $(distdir)/_build
	mkdir $(distdir)/_inst
	chmod a-w $(distdir)
	dc_install_base=`$(am__cd) $(distdir)/_inst && pwd | sed -e 's,^[^:\\/]:[\\/],/,'` \
	  && dc_destdir="$${TMPDIR-/tmp}/am-dc-$$$$/" \
	  && cd $(distdir)/_build \
	  && ../configure --srcdir=.. --prefix="$$dc_install_base" \
	    $(DISTCHECK_CONFIGURE_FLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) \
	  && $(MAKE) $(AM_MAKEFLAGS) dvi \
	  && $(MAKE) $(AM_MAKEFLAGS) check \
	  && $(MAKE) $(AM_MAKEFLAGS) install \
	  && $(MAKE) $(AM_MAKEFLAGS) installcheck \
	  && $(MAKE) $(AM_MAKEFLAGS) uninstall \
	  && $(MAKE) $(AM_MAKEFLAGS) distuninstallcheck_dir="$$dc_install_base" \
	        distuninstallcheck \
	  && chmod -R a-w "$$dc_install_base" \
	  && ({ \
	       (cd ../.. && umask 077 && mkdir "$$dc_destdir") \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" install \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" uninstall \
	       && $(MAKE) $(AM_MAKEFLAGS) DESTDIR="$$dc_destdir" \
	            distuninstallcheck_dir="$$dc_destdir" distuninstallcheck; \
	      } || { rm -rf "$$dc_destdir"; exit 1; }) \
	  && rm -rf "$$dc_destdir" \
	  && $(MAKE) $(AM_MAKEFLAGS) dist \
	  && rm -rf $(DIST_ARCHIVES) \
	  && $(MAKE) $(AM_MAKEFLAGS) distcleancheck
	$(am__remove_distdir)
	@(echo "$(distdir) archives ready for distribution: "; \
	  list='$(DIST_ARCHIVES)'; for i in $$list; do echo $$i; done) | \
	  sed -e '1{h;s/./=/g;p;x;}' -e '$${p;x;}'
distuninstallcheck:
	@cd $(distuninstallcheck_dir) \
	&& test `$(distuninstallcheck_listfiles) | wc -l` -le 1 \
	   || { echo "ERROR: files left after uninstall:" ; \
	        if test -n "$(DESTDIR)"; then \
	          echo "  (check DESTDIR support)"; \
	        fi ; \
	        $(distuninstallcheck_listfiles) ; \
	        exit 1; } >&2
distcleancheck: distclean
	@if test '$(srcdir)' = . ; then \
	  echo "ERROR: distcleancheck can only run from a VPATH build" ; \
	  exit 1 ; \
	fi
	@test `$(distcleancheck_listfiles) | wc -l` -eq 0 \
	  || { echo "ERROR: files left in build directory after distclean:" ; \
	       $(distcleancheck_listfiles) ; \
	       exit 1; } >&2
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(mkdir_p) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic clean-libtool clean-local \
	mostlyclean-am

distclean: distclean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-libtool distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

info: info-am

info-am:

install-data-am:

install-exec-am: install-binPROGRAMS

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -f $(am__CONFIG_DISTCLEAN_FILES)
	-rm -rf $(top_srcdir)/autom4te.cache
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-info-am

.PHONY: CTAGS GTAGS all all-am am--refresh check check-am clean \
	clean-binPROGRAMS clean-generic clean-libtool clean-local \
	ctags dist dist-all dist-bzip2 dist-gzip dist-shar dist-tarZ \
	dist-zip distcheck distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags \
	distcleancheck distdir distuninstallcheck dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-exec install-exec-am \
	install-info install-info-am install-man install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-info-am

clean-local:
	-rm -f *~ *.bak *.rpo *.sym lib*.*_pure_* core core.*
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
